{"version":3,"sources":["maumau/komponenten/karten/kartenRueckseite.jsx","lobby/welcome.jsx","maumau/komponenten/karten/kartenVorderseite.jsx","maumau/komponenten/spielerkarten/spieler.jsx","maumau/komponenten/gegnerkarten/gegner_karten.jsx","maumau/komponenten/gegnerkarten/gegner.jsx","maumau/komponenten/kartenstapel/kartenstapel.jsx","maumau/konstanten.jsx","maumau/maumau.jsx","api/api.js","lobby/lobby.jsx","App.js","serviceWorker.js","index.js"],"names":["KartenRueckseite","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","src","className","alt","Component","Welcome","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","state","spielername","setzeSpielernamen","event","setState","target","erstelleSpieler","preventDefault","props","api","geheInDieLobby","spieler","history","push","id","setzeSpielerZurueck","Container","Row","kartenRueckseite_KartenRueckseite","Col","onSubmit","InputGroup","Input","placeholder","onChange","required","Button","color","disabled","KartenVorderseite","beiClick","bind","assertThisInitialized","undefined","position","karte","art","wert","onClick","SpielerKarten","name","karten","map","aktuelleKarte","idx","kartenVorderseite_KartenVorderseite","GegnerKarten","_React$Component","react","gegner","kartenanzahl","toConsumableArray","x","React","Gegner","gegner_karten_GegnerKarten","KartenStapel","aktuellSichtbareKarte","ART","KARO","HERZ","PIK","KREUZ","WERT","SIEBEN","ACHT","NEUN","ZEHN","BUBE","DAME","KOENIG","ASS","MauMau","console","log","karteGewaehlt","kartenstapel","match","params","spielerId","sort","b","splice","gegner_Gegner","kartenstapel_KartenStapel","spieler_SpielerKarten","ApiComponent","ereignis","spielerErstellt","ergebnis","ok","alterState","spielGestartet","warteAufAlleSpielerBereit","_this2","api_Spieler","Spieler","spielStarten","_this3","Api","socket","rueckruf","_this4","emit","sucheSpiel","spielerIstBereit","warteAufSpielStart","callback","on","openSocket","Lobby","spiel","starteSpiel","mitspieler","status","App","aktualisiereLobby","connect","BrowserRouter","Route","exact","path","component","welcome_Welcome","assign","lobby_Lobby","maumau_MauMau","api_ApiComponent","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e1e92ab.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\nexport class KartenRueckseite extends Component {\n    render() {\n        return (\n            <img src={\"/karten/rueckseite.svg\"} className={\"kartenrueckseite\"} alt={\"karten rueckseite\"}/>\n        )\n    }\n}","import React, {Component} from 'react';\n\nimport {Button, Col, Container, Input, InputGroup, Row} from 'reactstrap';\nimport {KartenRueckseite} from \"../maumau/komponenten/karten/kartenRueckseite\";\n\nexport class Welcome extends Component {\n    state = {\n        spielername: \"\",\n    };\n\n    componentDidMount() {\n        this.props.setzeSpielerZurueck();\n    }\n\n    setzeSpielernamen = (event) => {\n        this.setState({ spielername: event.target.value })\n    };\n\n    erstelleSpieler = (event) => {\n        event.preventDefault()\n        this.props.api.erstelleSpieler(this.state.spielername, this.geheInDieLobby)\n    }\n\n    geheInDieLobby = (spieler) => {\n        this.props.history.push(`/lobby/${spieler.id}`)\n    };\n\n    render() {\n        return (\n            <div className={\"welcome\"}>\n                <Container>\n                    <Row>\n                        <KartenRueckseite/>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <form onSubmit={this.erstelleSpieler}>\n                                <InputGroup>\n                                    <Input placeholder=\"Spielername\" onChange={this.setzeSpielernamen} required/>\n                                </InputGroup>\n                                <InputGroup>\n                                    <Button color=\"success\" disabled={this.state.spielername.length < 1}>Neues Siel erstellen</Button>\n                                </InputGroup>\n                            </form>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}","import React, {Component} from \"react\";\n\nexport class KartenVorderseite extends Component {\n    constructor(props) {\n        super(props);\n\n        this.beiClick = this.beiClick.bind(this);\n    }\n\n    beiClick() {\n        if (this.props.beiClick !== undefined && this.props.position !== undefined) {\n            this.props.beiClick(this.props.position);\n        }\n    }\n\n    render() {\n        return (\n            <img src={\"/karten/\" + this.props.karte.art + \"/\" + this.props.karte.wert + \".svg\"}\n                 className={\"kartenvorderseite\"}\n                 onClick={this.beiClick}\n                 alt={this.props.karte.art + \" \" + this.props.karte.wert}\n            />\n        )\n    }\n}","import React, {Component} from \"react\";\nimport {KartenVorderseite} from \"../karten/kartenVorderseite\";\n\nexport class SpielerKarten extends Component {\n    render() {\n        return (\n            <div className={\"spieler\"}>\n                <h1 className={\"name\"}>{this.props.spieler.name}</h1>\n                <div className={\"karten\"}>\n                    {\n                        this.props.spieler.karten.map(\n                            (aktuelleKarte, idx) => (\n                                <KartenVorderseite key={idx} position={idx} karte={aktuelleKarte} beiClick={this.props.beiClick}/>\n                            )\n                        )\n                    }\n                </div>\n            </div>\n        )\n    }\n}","import * as React from \"react\";\nimport {KartenRueckseite} from \"../karten/kartenRueckseite\";\n\nexport class GegnerKarten extends React.Component {\n\n    render() {\n        return (\n            <div className={\"gegner\"}>\n                <div className={\"karten \" + (this.props.gegner.kartenanzahl > 3 ? 'ueberlappend' : '')}>\n                    {\n                        [...Array(this.props.gegner.kartenanzahl)]\n                            .map((x, idx) => <KartenRueckseite key={idx}/>)\n                    }\n                </div>\n                <h1 className={\"name\"}>{this.props.gegner.name}</h1>\n            </div>\n        );\n    }\n}","import {GegnerKarten} from \"./gegner_karten\";\nimport React from \"react\"\n\nexport class Gegner extends React.Component {\n    render() {\n        return (\n            <div className={\"alleGegner\"}>\n                {this.props.gegner.map((gegner) =>\n                    <GegnerKarten gegner={gegner} key={gegner.name}/>\n                )}\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport {KartenRueckseite} from \"../karten/kartenRueckseite\";\nimport {KartenVorderseite} from \"../karten/kartenVorderseite\";\n\nexport class KartenStapel extends Component {\n    render() {\n        return (\n            <div className={\"kartenstapel\"}>\n                <KartenRueckseite/>\n                <KartenVorderseite karte={this.props.aktuellSichtbareKarte}/>\n            </div>\n        );\n    }\n}","export const ART = { KARO: \"karo\", HERZ: \"herz\", PIK: \"pik\", KREUZ: \"kreuz\" };\n\nexport const WERT = { SIEBEN: \"7\", ACHT: \"8\", NEUN: \"9\", ZEHN: \"10\", BUBE: \"bube\", DAME: \"dame\", KOENIG: \"koenig\", ASS: \"ass\" };","import React from 'react';\nimport {SpielerKarten} from \"./komponenten/spielerkarten/spieler\";\nimport {Gegner} from \"./komponenten/gegnerkarten/gegner\";\nimport {KartenStapel} from \"./komponenten/kartenstapel/kartenstapel\";\nimport {ART, WERT} from \"./konstanten\";\n\nexport class MauMau extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log('constructor');\n        this.karteGewaehlt = this.karteGewaehlt.bind(this);\n\n        this.state = {\n            gegner: [\n                {\n                    name: \"Horst\",\n                    kartenanzahl: 2\n                },\n                {\n                    name: \"Peter\",\n                    kartenanzahl: 11\n                },\n                {\n                    name: \"Gertrude\",\n                    kartenanzahl: 8\n                },\n            ],\n            kartenstapel: {\n                kartenanzahl: 10,\n                aktuellSichtbareKarte: {\n                    art: ART.PIK,\n                    wert: WERT.ASS\n                }\n            },\n            spieler: {\n                id: this.props.match.params.spielerId,\n                name: this.props.match.params.spielerId,\n                karten: [\n                    {\n                        art: ART.KARO,\n                        wert: WERT.ASS\n                    },\n                    {\n                        art: ART.PIK,\n                        wert: WERT.BUBE\n                    },\n                    {\n                        art: ART.HERZ,\n                        wert: WERT.DAME\n                    },\n                    {\n                        art: ART.KREUZ,\n                        wert: WERT.KOENIG\n                    },\n                ]\n            },\n        };\n    }\n\n    componentDidMount() {\n        console.log('component did mount');\n        // TODO load all necessary information and sort opponents by name lexicographically for a steady order or provide an arbitrary id\n        this.setState(this.state.gegner.sort((a, b) => {\n            if (a.name < b.name) {\n                return -1;\n            }\n            if (a.name > b.name) {\n                return 1;\n            }\n            return 0;\n        }))\n    }\n\n    karteGewaehlt(position) {\n        // TODO send picked card to server\n        var karte = this.state.spieler.karten[position];\n\n        this.state.spieler.karten.splice(position, 1);\n        this.setState({\n                          kartenstapel: {\n                              aktuellSichtbareKarte: karte\n                          }\n                      })\n    }\n\n    render() {\n        console.log('render');\n        return (\n            <div className={\"maumau\"}>\n                <Gegner gegner={this.state.gegner}/>\n                <KartenStapel\n                    kartenanzahl={this.state.kartenstapel.kartenanzahl}\n                    aktuellSichtbareKarte={this.state.kartenstapel.aktuellSichtbareKarte}\n                />\n                <SpielerKarten\n                    spieler={this.state.spieler}\n                    beiClick={this.karteGewaehlt}\n                />\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport openSocket from 'socket.io-client';\nimport { Button, Col, Container, Input, InputGroup, Row } from 'reactstrap';\n\nclass ApiComponent extends Component {\n    state = {\n        spielername: '',\n        spieler: []\n    };\n\n    erstelleSpieler = (ereignis) => {\n        ereignis.preventDefault();\n        this.props.api.erstelleSpieler(this.state.spielername, this.spielerErstellt)\n    };\n\n    spielerErstellt = (ergebnis) => {\n        if (ergebnis.ok) {\n            this.setState((alterState) => ({\n                spieler: [...alterState.spieler, ergebnis]\n            }))\n        } else {\n            console.log(\"Fehler beim Erstellen des Spielers.\");\n        }\n    };\n\n    setzeSpielernamen = (ereignis) => {\n        this.setState({\n            spielername: ereignis.target.value\n        })\n    };\n\n    spielGestartet = (ergebnis) => {\n        this.props.api.warteAufAlleSpielerBereit(ergebnis, () => {\n            console.log('Geht los');\n        })\n    }\n\n\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <h2>Befehle</h2>\n                </Row>\n                <Row>\n                    <Col>\n                        <form onSubmit={this.erstelleSpieler}>\n                            <InputGroup>\n                                <Input placeholder=\"Spielername\" onChange={this.setzeSpielernamen} required />\n                            </InputGroup>\n                            <InputGroup>\n                                <Button color=\"success\" disabled={this.state.spielername.length < 1}>Spieler erstellen</Button>\n                            </InputGroup>\n                        </form>\n                    </Col>\n                </Row>\n                <Row>\n                    <h2>Erstellte Spieler</h2>\n                </Row>\n                <Row>\n                    <Col>\n                        <ul>\n                            {this.state.spieler.map(spieler => (\n                                <Spieler api={this.props.api} spieler={spieler} key={spieler.id} spielGestartet={this.spielGestartet} />\n                            ))}\n                        </ul>\n                    </Col>\n                </Row>\n                <Row>\n                    <h2>Spiele</h2>\n                </Row>\n                {/* <Row>\n                    <Col>\n                        <ul>\n                            {this.state.spieler.map(spieler => (\n                                <Spieler api={this.props.api} spieler={spieler} key={spieler.id} spielGestartet={this.spielGestartet} />\n                            ))}\n                        </ul>\n                    </Col>\n                </Row> */}\n            </Container>\n        )\n    }\n}\n\nclass Spieler extends Component {\n    spielStarten = (ereignis) => {\n        ereignis.preventDefault();\n        this.props.api.spielStarten(this.props.spieler.id, this.props.spielGestartet)\n    };\n\n    render() {\n        return (\n            <Button\n                key={this.props.spieler.id}\n                onClick={this.spielStarten}\n            >\n                {this.props.spieler.name}\n            </Button>\n        )\n    }\n}\n\nclass Api {\n    socket = null;\n\n    connect() {\n        this.socket = openSocket('http://localhost:8000')\n    }\n\n    erstelleSpieler = (name, rueckruf) => {\n        this.socket.emit(\n            'erstelleSpieler',\n            { name },\n            (ergebnis) => {\n                rueckruf(ergebnis)\n            }\n        )\n    }\n\n    sucheSpiel = (spielerId, rueckruf) => {\n        this.socket.emit(\n            'sucheSpiel',\n            { spielerId },\n            rueckruf\n        )\n    }\n\n    spielerIstBereit = (spielerId) => {\n        this.socket.emit('spielerIstBereit',{spielerId})\n    }\n\n    // ladeLobby(spielerId, rueckruf) {\n    //     this.socket.emit(\n    //         'ladeLobby',\n    //         { spielerId },\n    //         (ergebnis) => {\n    //             rueckruf(ergebnis)\n    //         }\n    //     )\n    // }\n    warteAufSpielStart = (spielerId, callback) => {\n        this.socket.on(\n            `spielGestartet${spielerId}`,\n            callback\n        )\n    }\n}\n\nexport { ApiComponent, Api }","import React, { Component } from \"react\";\nimport Container from \"reactstrap/es/Container\";\nimport { Row } from \"reactstrap\";\nimport Col from \"reactstrap/es/Col\";\nimport Button from \"reactstrap/es/Button\";\n\nexport class Lobby extends Component {\n    constructor(props) {\n        super(props)\n        if (!props.spiel.id) {\n            this.props.sucheSpiel(this.props.match.params.spielerId)\n        }\n        this.props.api.warteAufSpielStart(this.props.match.params.spielerId, this.props.starteSpiel)\n    }\n\n    spielerIstBereit = () => {\n        this.props.api.spielerIstBereit(this.props.spiel.spieler.id)\n    }\n\n    starteSpiel = (spiel) =>{\n        console.log(spiel)\n    }\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <h1>Willkommen in der Lobby {this.props.spiel.spieler.name}!</h1>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <h3>Spieler:</h3>\n                    </Col>\n                </Row>\n                {this.props.spiel.mitspieler.map(\n                    (spieler) => {\n                        return (\n                            <Row key={spieler.name}>\n                                <Col>{spieler.name}</Col>\n                                <Col>{spieler.status}</Col>\n                            </Row>\n                        );\n                    }\n                )}\n                <Row>\n                    <Col><Button color=\"success\" onClick={this.spielerIstBereit}>Spiel starten</Button> </Col>\n                </Row>\n            </Container>\n        );\n    }\n}","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\nimport './App.css'\nimport { Welcome } from './lobby/welcome'\nimport { MauMau } from \"./maumau/maumau\";\nimport { Api, ApiComponent } from './api/api'\nimport { Lobby } from \"./lobby/lobby\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      api: new Api(),\n\n      spiel: {\n        mitspieler: [],\n        spieler: {\n          id: '',\n          name: ''\n        }\n      }\n    };\n    this.state.api.connect()\n  }\n\n  setzeSpielerZurueck = () => {\n    if(this.state.spiel.spieler.id !== '') {\n      this.setState({\n        spiel: {\n          mitspieler: [],\n          spieler: {\n            id: '',\n            name: ''\n          }\n        }\n      })\n    }\n  }\n\n  sucheSpiel = (spielerId) => {\n    this.state.api.sucheSpiel(spielerId, this.aktualisiereLobby)\n  }\n\n  aktualisiereLobby = (spiel) => {\n    this.setState({ spiel: spiel })\n  }\n\n  starteSpiel= (spiel) => {\n    console.log(spiel);\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className={\"router\"}>\n          <Route exact path=\"/\" component={props => <Welcome {...props} setzeSpielerZurueck={this.setzeSpielerZurueck} api={this.state.api} />} />\n          <Route\n            path=\"/lobby/:spielerId\"\n            component={\n              props =>\n                <Lobby\n                  {...props}\n                  sucheSpiel={this.sucheSpiel}\n                  starteSpiel={this.starteSpiel}\n                  api={this.state.api}\n                  spiel={this.state.spiel}\n                  spieler={this.state.spieler}\n                />\n            }\n          />\n          <Route path=\"/mau-mau/:spielerId\" component={props => <MauMau {...props} />} />\n          <Route path=\"/api\" component={props => <ApiComponent {...props} api={this.state.api} />} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}